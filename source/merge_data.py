import os
import pandas as pd

# Th∆∞ m·ª•c ch·ª©a c√°c file batch
DATA_DIR = "./data"
INPUT_FILE = "./data/vgsales.csv"
OUTPUT_FILE = "./data/vgsales_final.csv"


# T√¨m t·∫•t c·∫£ file batch c√≥ d·∫°ng vgsales_updated_X.csv
csv_files = [f for f in os.listdir(DATA_DIR) if f.startswith("vgsales_updated_") and f.endswith(".csv")]

# Ki·ªÉm tra n·∫øu file output ƒë√£ t·ªìn t·∫°i
if not os.path.exists(INPUT_FILE):
    print(f"‚ùå Kh√¥ng t√¨m th·∫•y {INPUT_FILE}. H√£y ƒë·∫£m b·∫£o file n√†y ƒë√£ ƒë∆∞·ª£c t·∫°o tr∆∞·ªõc!")
    exit(1)

# ƒê·ªçc file g·ªëc ch·ª©a to√†n b·ªô d·ªØ li·ªáu
merged_df = pd.read_csv(INPUT_FILE, low_memory=False)
print(f"‚úÖ ƒê√£ t·∫£i {INPUT_FILE} v·ªõi {len(merged_df)} d√≤ng.")

# Danh s√°ch ch·ª©a d·ªØ li·ªáu t·ª´ t·∫•t c·∫£ batch
batch_data = []

# üîπ B∆∞·ªõc 1: ƒê·ªçc t·∫•t c·∫£ file batch v√† g·ªôp th√†nh m·ªôt DataFrame
for file in sorted(csv_files, key=lambda x: int(x.split("_")[-1].split(".")[0])):  # S·∫Øp x·∫øp theo batch_id
    file_path = os.path.join(DATA_DIR, file)
    print(f"üîÑ ƒêang ƒë·ªçc file: {file_path}")
    
    batch_df = pd.read_csv(file_path, usecols=["Rank", "Genre"], low_memory=False)
    batch_data.append(batch_df)

# N·∫øu c√≥ batch ƒë·ªÉ c·∫≠p nh·∫≠t, th·ª±c hi·ªán merge
if batch_data:
    batch_df = pd.concat(batch_data, ignore_index=True)

    # üîπ B∆∞·ªõc 2: Lo·∫°i b·ªè d√≤ng tr√πng l·∫∑p theo Rank (gi·ªØ gi√° tr·ªã cu·ªëi c√πng)
    batch_df.drop_duplicates(subset=["Rank"], keep="last", inplace=True)

    # üîπ B∆∞·ªõc 3: Ghi gi√° tr·ªã Genre m·ªõi v√†o `merged_df` theo Rank
    merged_df = merged_df.merge(batch_df, on="Rank", how="left", suffixes=("", "_new"))
    
    # Ch·ªâ c·∫≠p nh·∫≠t nh·ªØng d√≤ng c√≥ gi√° tr·ªã m·ªõi
    merged_df["Genre"] = merged_df["Genre_new"].combine_first(merged_df["Genre"])

    # X√≥a c·ªôt t·∫°m
    merged_df.drop(columns=["Genre_new"], inplace=True)

    # L∆∞u l·∫°i file sau khi c·∫≠p nh·∫≠t
    merged_df.to_csv(OUTPUT_FILE, index=False)
    print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t xong! File l∆∞u t·∫°i: {OUTPUT_FILE}")
else:
    print("‚ö†Ô∏è Kh√¥ng c√≥ file batch n√†o ƒë·ªÉ c·∫≠p nh·∫≠t!")
