name: Genre Crawler Batch

on:
  workflow_dispatch:  # Ch·∫°y th·ªß c√¥ng khi b·∫•m "Run workflow"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      batch_ids: ${{ steps.set-batch.outputs.batch_ids }}
    steps:
      - name: Generate batch list
        id: set-batch
        run: echo "batch_ids=$(seq 0 66 | jq -R -s 'split(\"\n\")[:-1]')" >> $GITHUB_ENV
  
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # C·∫•p quy·ªÅn ghi v√†o repo
    timeout-minutes: 330  # ‚è≥ H·ªßy job n·∫øu ch·∫°y qu√° 5 gi·ªù 30 ph√∫t

    strategy:
      matrix:
        batch_id: ${{ fromJson(needs.prepare.outputs.batch_ids) }}
      fail-fast: false  # üî• Kh√¥ng h·ªßy c√°c batch kh√°c n·∫øu m·ªôt batch b·ªã l·ªói

    steps:
      - name: Check Memory Usage
        run: free -h

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # S·ª≠ d·ª•ng token ƒë·ªÉ c√≥ quy·ªÅn push

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run genre.py for Batch ${{ matrix.batch_id }}
        run: python -u genre.py ${{ matrix.batch_id }} 1000 || echo "Script failed, check logs."

      
      - name: Save progress to GitHub
        if: always()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          
          FILE_PATH="data/vgsales_updated_${{ matrix.batch_id }}.csv"
          
          # L·∫•y thay ƒë·ªïi m·ªõi nh·∫•t t·ª´ remote tr∆∞·ªõc khi push
          # git pull --rebase origin master || echo "‚ö†Ô∏è Pull failed, continuing..."
          
          git add .
          git commit -m "Batch ${{ matrix.batch_id }} progress" || echo "‚ö†Ô∏è No changes to commit."
          git push origin HEAD:master || (echo "‚ö†Ô∏è Push failed, retrying..." && sleep 10 && git pull --rebase origin master && git push origin master)

      - name: Upload CSV Progress
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vgsales-progress-batch-${{ matrix.batch_id }}
          path: data/vgsales_updated_${{ matrix.batch_id }}.csv
          if-no-files-found: warn
          overwrite: true  # üî• Cho ph√©p ghi ƒë√® n·∫øu file ƒë√£ t·ªìn t·∫°i
